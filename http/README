HTTP Client pipeline

1. Recebe uma URL em argv[] e separa ela em 3 partes: host, port, path
2. Converte o host para um IP e tenta buscar suas informações
3. Cria um socket e tenta se conectar com o IP da etapa anterior
4. Formata a requisição HTTP - GET o path, para o host, quando terminar a requisição, fechar a conexão.
5. Enviar requisição
6. Receber o cabeçalho da resposta e verifica se a requisição foi teve uma resposta bem sucedida 
7. Cria um arquivo e salva o corpo nele
8. Fecha a conexão

HTTP Server pipeline

1. Recebe um diretório para servir
2. Cria um socket para um servidor e faz um bind para a porta definida, onde irá movimentar os dados
3. Fica esperando(ouvindo) por conexões
4. Se conecta ao cliente(max=10)
5. Cria uma thread para cuidar da requisição dele
5.1 Recebe sua requisição e verifica se é um GET
5.2 Recebe a url e decodifica (extrai o filename requisitado)
5.3 Formata a resposta
  5.3.1 Caso não especifique um arquivo, busca pelo index.html
        Se tiver index o envia, caso contrário envia uma lista dos arquivos presentes do diretório
  5.3.2 Caso especifique um arquivo, envia este
  5.3.3 Verificação da existencia do arquivo - sele existir contrói um cabeçalho de sucesso e seu tipo, caso contrário envia um erro 404
  5.3.4 Copia o conteúdo do arquivo para o buffer
6. Envia a resposta pela porta para o Cliente